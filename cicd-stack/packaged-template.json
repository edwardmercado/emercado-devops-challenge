
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Tier-1: Beginner Challenge - Elastic Beanstalk - CICD Stack

  '
Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
            - codebuild.amazonaws.com
            - codedeploy.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'
  AppPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location:
          Ref: ArtifactBucket
        Type: S3
      RoleArn:
        Fn::GetAtt:
        - CodePipelineServiceRole
        - Arn
      Stages:
      - Name: Source
        Actions:
        - Name: SourceAction
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: 1
            Provider: GitHub
          OutputArtifacts:
          - Name: SourceOutput
          Configuration:
            Owner: Edward Mercado
            Repo: https://github.com/edwardmercado/apper-devops-technical-challenge-tier-1.git
            Branch: main
            OAuthToken: f0899a05de1df332bcf155b9f10426b47fa49b58
            PollForSourceChanges: false
          RunOrder: 1
      - Name: Beta
        Actions:
        - Name: BetaAction
          InputArtifacts:
          - Name: SourceOutput
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: CodeDeploy
          Configuration:
            ApplicationName: DevOpsChallenge-1
            DeploymentGroupName: DevOpsChallenge-fleet
          RunOrder: 1
  Webhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      AuthenticationConfiguration:
        SecretToken: f0899a05de1df332bcf155b9f10426b47fa49b58
      Filters:
      - JsonPath: $.ref
        MatchEquals: refs/heads/{Branch}
      Authentication: GITHUB_HMAC
      TargetPipeline:
        Ref: AppPipeline
      TargetAction: Source
      Name: MyWebhook
      RegisterWithThirdParty: 'true'
      TargetPipelineVersion:
        Fn::GetAtt:
        - AppPipeline
        - Version
