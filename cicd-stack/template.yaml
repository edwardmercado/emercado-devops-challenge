AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Tier-1: Beginner Challenge - Elastic Beanstalk - CICD Stack

Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket

  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
                - codedeploy.amazonaws.com
                - s3.amazonaws.com
                - cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
  #Code Build
  AppCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      # Name: tier-1-challenge-build
      # Description: Apper PH Technical Challenge Tier 1
      ServiceRole: !GetAtt CodePipelineServiceRole.Arn
      Cache:
        Type: S3
        Location: !Join [ "/", [ !Ref ArtifactBucket, "project_cache" ] ]
      Artifacts:
        Type: CODEPIPELINE
        Location: !Ref ArtifactBucket
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        # Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        Image: aws/codebuild/standard:2.0
        # EnvironmentVariables:
        # - Name: varName
        #   Type: varType
        #   Value: varValue
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 15
      LogsConfig:
        CloudWatchLogs: 
          GroupName: tier-1-challenge-build-log-group
          Status: ENABLED
      # Tags:
      #   - Key: Key1
      #     Value: Value1
      #   - Key: Key2
      #     Value: Value2

  # Elastic Beanstalk
  AppElasticBeanstalk:
    Type: AWS::ElasticBeanstalk::Application
    Description: Apper DevOps Engineer Technical Challenge Sample Application
    # DependsOn: AppPipeline
    # DependsOn: MyDB
    Properties:
      ApplicationVersions:
        - Description: Version 1.0
          SourceBundle:
            S3Bucket: emercado-tier-1-code-37yyuj5midn7s
            S3Key: express-miniapp.zip
          VersionLabel: Initial Version
  
  AppElasticBeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref AppElasticBeanstalk
      SolutionStackName: "64bit Amazon Linux 2 v5.3.0 running Node.js 14"
      OptionSettings:
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: aws-elasticbeanstalk-ec2-role
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: ServiceRole
          Value: aws-elasticbeanstalk-service-role
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value: 
            Fn::ImportValue:
              VPCId
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value: application
        - Namespace: aws:ec2:vpc
          OptionName: ELBSubnets
          Value: !Join
            - ','
            - - Fn::ImportValue:
                  PublicSubnetAZA
              - Fn::ImportValue:
                  PublicSubnetAZB
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value: !Join
            - ','
            - - Fn::ImportValue:
                  PrivateSubnetAZA
              - Fn::ImportValue:
                  PrivateSubnetAZB
        - Namespace: aws:elbv2:loadbalancer
          OptionName: SecurityGroups
          Value:
            Fn::ImportValue:
              LoadBalancerSecurityGroup
        - Namespace: aws:elasticbeanstalk:healthreporting:system
          OptionName: SystemType
          Value: enhanced
        - Namespace: aws:elbv2:loadbalancer
          OptionName: ManagedSecurityGroup
          Value:
            Fn::ImportValue:
              LoadBalancerSecurityGroup

  #Code Pipeline
  AppPipeline: 
    Type: AWS::CodePipeline::Pipeline 
    Properties: 
      ArtifactStore:
        Location: !Ref ArtifactBucket
        Type: S3
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages: 
        - 
          Name: Source 
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source 
                Owner: AWS 
                Version: '1' 
                Provider: CodeStarSourceConnection          
              OutputArtifacts: 
                - 
                  Name: SourceArtifact 
              Configuration: 
                ConnectionArn: !GetAtt CodeStarConnection.ConnectionArn
                FullRepositoryId: edwardmercado/apper-devops-technical-challenge-tier-1
                BranchName: main
                OutputArtifactFormat: CODE_ZIP
              RunOrder: 1 
        - 
          Name: Build 
          Actions: 
            - 
              Name: BuildAction 
              InputArtifacts: 
                -
                  Name: SourceArtifact
              ActionTypeId: 
                Category: Build 
                Owner: AWS
                Version: 1 
                Provider: CodeBuild
              Configuration: 
                ProjectName: !Ref AppCodeBuildProject
              RunOrder: 2 
        - 
          Name: Release 
          Actions: 
            - 
              Name: ReleaseAction
              InputArtifacts: 
                - 
                  Name: SourceArtifact 
              ActionTypeId: 
                Category: Deploy 
                Owner: AWS 
                Version: 1
                Provider: ElasticBeanstalk 
              Configuration: 
                ApplicationName: !Ref AppElasticBeanstalk
                EnvironmentName: !Ref AppElasticBeanstalkEnvironment
              RunOrder: 3
      # ArtifactStore: 
      #   Type: S3 
      #   Location: !GetAtt ArtifactBucket.Arn

  CodeStarConnection:
    Type: 'AWS::CodeStarConnections::Connection'
    Properties:
      ConnectionName: GitHubToPipelineConnection-tier1
      ProviderType: GitHub


#Outputs:
